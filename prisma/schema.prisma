// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  name        String   @id @unique
  players     Player[]
  homeMatches Match[]  @relation("HomeMatches")
  awayMatches Match[]  @relation("AwayMatches")
  homeTeamSituation CurrentSituation[] @relation("HomeTeamSituation")
  awayTeamSituation CurrentSituation[] @relation("AwayTeamSituation")
}

model Player {
  id        String @id @default(cuid())
  name      String
  team      Team   @relation(fields: [teamName], references: [name])
  teamName  String
  birthDate DateTime
  battingArm Arm
  pitchingArm Arm
  pitchingArmStyle PitchingArmStyle
  pitchingStyle Int // Flyball, Groundball
  // Primary Stats of a player
  shoulderPower Int
  legPower Int
  wristPower Int
  corePower Int
  handEyeCoordination Int
  sophisticated Int
  baseballIQ Int
  effort Int
  flexibility Int
  speed Int
  agility Int
  mentality Int
  lifeStyle Int
  durability Int
  againstLeft Int
  againstRight Int
  againstUnder Int
  creativity Int
  catching Int
  stamina Int
  handling Int
  adaptability Int
  DynamicVisualAcuity Int
  buntAbility Int
  potential Int
  battingAbility Int
  pitchingAbility Int
  // Secondary Stats
  stuff Int
  pitchSpeed Int
  pitchMovement Int
  command Int
  pickoff Int
  battingEye Int
  homeRunPower Int
  contact Int
  gapPower Int
  baseRunning Int
  health Int
  // Relations
  defenceStats DefenceStats[] @relation("defender")
  pitchTypeStats PitchTypeStats[] @relation("pitchTypeStats")
  pitcherRecord CurrentSituation[] @relation("pitcher")
  catcherRecord CurrentSituation[] @relation("catcher")
  firstBaseFielderRecord CurrentSituation[] @relation("firstBaseFielder")
  secondBaseFielderRecord CurrentSituation[] @relation("secondBaseFielder")
  thirdBaseFielderRecord CurrentSituation[] @relation("thirdBaseFielder")
  shortStopRecord CurrentSituation[] @relation("shortStop")
  leftFielderRecord CurrentSituation[] @relation("leftFielder")
  centerFielderRecord CurrentSituation[] @relation("centerFielder")
  rightFielderRecord CurrentSituation[] @relation("rightFielder")
  designatedHitterRecord CurrentSituation[] @relation("designatedHitter")
  batterRecord CurrentSituation[] @relation("batter")

}

enum Arm {
  Left 
  Right
  Both
}

enum PitchingArmStyle {
  Overhand
  Three_quarters
  Sidearm
  Under
}

model DefenceStats {
  player Player @relation("defender", fields: [playerId], references: [id])
  playerId String @id
  pitcher Int @default(0)
  firstBaseFielder Int @default(0)
  secondBaseFielder Int @default(0)
  thirdBaseFielder Int @default(0)
  shortStop Int @default(0)
  catcher Int @default(0)
  leftFielder Int @default(0)
  centerFielder Int @default(0)
  rightFielder Int @default(0)

}

model PitchTypeStats {
  player Player @relation("pitchTypeStats", fields: [playerId], references: [id])
  playerId String @id
  four_seam_fastball Int @default(0)
  two_seam_fastball Int @default(0)
  curveball Int @default(0)
  slider Int @default(0)
  changeup Int @default(0)
  circle_changeup Int @default(0)
  forkball Int @default(0)
  cutter Int @default(0)
  splitter Int @default(0)
  screwball Int @default(0)
  slurve Int @default(0)
  knuckleball Int @default(0)
  sweeper Int @default(0)

}

model Match {
  id          String   @id @default(cuid())
  matchAt     DateTime
  homeTeam    Team     @relation("HomeMatches", fields: [homeTeamName], references: [name])
  homeTeamName String
  awayTeam    Team     @relation("AwayMatches", fields: [awayTeamName], references: [name])
  awayTeamName String
  stadium String
  weather String
  homeTeamScore Int @default(0)
  homeTeamHit Int @default(0)
  homeTeamB Int @default(0)
  homeTeamError Int @default(0)
  awayTeamScore Int @default(0)
  awayTeamHit Int @default(0)
  awayTeamB Int @default(0)
  awayTeamError Int @default(0)
  records CurrentSituation[]

}


model CurrentSituation {
  id String @id @default(cuid())
  match Match @relation(fields: [matchId], references: [id])
  matchId String
  currentBall Pitch?
  pitcher Player @relation("pitcher", fields: [pitcherId], references: [id])
  pitcherId String
  catcher Player @relation("catcher", fields: [catcherId], references: [id])
  catcherId String
  firstBaseFielder Player @relation("firstBaseFielder", fields: [firstBaseFielderId], references: [id])
  firstBaseFielderId String
  secondBaseFielder Player @relation("secondBaseFielder", fields: [secondBaseFielderId], references: [id])
  secondBaseFielderId String
  thirdBaseFielder Player @relation("thirdBaseFielder", fields: [thirdBaseFielderId], references: [id])
  thirdBaseFielderId String
  shortStop Player @relation("shortStop", fields: [shortStopId], references: [id])
  shortStopId String
  leftFielder Player @relation("leftFielder", fields: [leftFielderId], references: [id])
  leftFielderId String
  centerFielder Player @relation("centerFielder", fields: [centerFielderId], references: [id])
  centerFielderId String
  rightFielder Player @relation("rightFielder", fields: [rightFielderId], references: [id])
  rightFielderId String
  designatedHitter Player @relation("designatedHitter", fields: [designatedHitterId], references: [id])
  designatedHitterId String
  batter Player @relation("batter", fields: [batterId], references: [id])
  batterId String
  ballCount Int @default(0)
  strikeCount Int @default(0)
  outCount Int @default(0)
  inning String @default("top1")
  homeTeamCurrentScore Int @default(0)
  awayTeamCurrentScore Int @default(0)
  homeTeam Team @relation("HomeTeamSituation", fields: [homeTeamName], references: [name])
  homeTeamName String
  awayTeam Team @relation("AwayTeamSituation", fields: [awayTeamName], references: [name])
  awayTeamName String
}

model Pitch {
  id String @id @default(cuid())
  speed Int
  pitchType PitchType
  ballStrike BallStrike
  pitchResult String
  pitchLocationX Float
  pitchLocatioY Float
  currentSituation CurrentSituation @relation(fields: [currentSituationId], references: [id])
  currentSituationId String @unique
}

enum PitchType {
  four_seam_fastball
  two_seam_fastball
  curveball
  slider
  changeup
  circle_changeup
  forkball
  cutter
  splitter
  screwball
  slurve
  knuckleball
  sweeper
}
enum BallStrike {
  Ball
  Strike
}